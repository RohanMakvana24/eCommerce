<%- include('../layout/header.ejs') %>
    <main id="main-wrapper" class="main-wrapper">
        <%- include('../layout/navbar.ejs') %> <%- include('../layout/sidebar.ejs') %>
                <div id="app-content">
                    <!-- Container fluid -->
                    <div class="app-content-area">
                        <div class="container-fluid">
                            <div class="row">
                                <div class="col-lg-12 col-md-12 col-12">
                                    <!-- Page header -->
                                    <div class="mb-5">
                                        <h3 class="mb-0">Update Categories</h3>
                                    </div>
                                </div>
                            </div>
                            <div>
                                <!-- row -->

                                <div class="row">
                                    <div class="col-lg-12 col-12">
                                        <!-- card -->
                                        <div class="card mb-6">
                                            <!-- card body -->
                                            <form id="updateCategoriesForm" enctype="multipart/form-data">
                                                <div class="card-body">
                                                    <div class="row">
                                                        <div class="col-md-12 mb-3">
                                                            <label class="form-label">Name</label>
                                                            <input type="text" value="<%= data.name %>"
                                                                class="form-control" id="name" name="name"
                                                                placeholder="Category Name" required />
                                                        </div>

                                                    </div>
                                                    <div class="row">
                                                        <div class="col-md-12 mb-3">
                                                            <label class="form-label">Status</label>
                                                            <select class="form-select" name="status"
                                                                aria-label="Default select example">
                                                                <option value="">Select Status</option>
                                                                <option <%=data.isActive ? 'selected' : '' %> value="1">
                                                                    Active</option>
                                                                <option <%=data.isActive ? '' : 'selected' %>
                                                                    value="0">Inactive</option>
                                                            </select>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-12 mb-3">
                                                            <label class="form-label">Description</label>
                                                            <div id="toolbar-container">
                                                            </div>
                                                            <div style="height : 100px" id="editor-container">
                                                            </div>
                                                            <span id="descrptionError"> </span>

                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-12 mb-3">
                                                            <label class="form-label">Preview Image </label>
                                                            <br>
                                                            <img src="<%= data.image[0].url %>" height="100"
                                                                width="100" />
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-12 mb-3">
                                                            <label class="form-label">Profile</label>
                                                            <div id="myDropzone" class="dropzone">
                                                                <div class="dz-message">
                                                                    Drop files here or click to upload
                                                                </div>
                                                            </div>
                                                            <span id="imageError"> </span>

                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <input type="hidden" id="public_id" name="public_id" />
                                                        <input type="hidden" id="url" name="url" />
                                                        <input type="hidden" value="<%= data._id %>" id="catId"
                                                            name="catId" />


                                                        <div class="col-12 mb-3">
                                                            <input type="submit" id="AddCatBtn" class="btn btn-primary"
                                                                value="Update Now" />
                                                        </div>
                                                    </div>
                                                </div>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
    </main>
    <%- include('../layout/footer.ejs') %>
        <script>
            var quill = new Quill('#editor-container', {
                modules: {
                    toolbar: [
                        [{ header: [1, 2, false] }],
                        ['bold', 'italic', 'underline'],
                        [{ list: 'ordered' }, { list: 'bullet' }],
                        ['link'],
                        ['clean']
                    ]
                },
                theme: 'snow'

            });
            var descriptionold = `<%= data.description %>`;
            // Set the content of the editor
            quill.root.innerHTML = descriptionold;
        </script>
        <script>
            $(document).ready(function () {
                const token = localStorage.getItem('token');
                const AuthToken = token.slice(1, -1);

                //Get All Categories ðŸ’£
                // function getCategory() {
                //     $("#parentCategories").empty();
                //     $.ajax({
                //         url: "/categoryhandle/get-category",
                //         type: "GET",
                //         headers: {
                //             Authorization: `Bearer ${AuthToken}`
                //         },
                //         success: function (response) {
                //             if (response.data.length == 0) {
                //                 $("#parentCategories").prop("disabled", true)
                //             } else {
                //                 $("#parentCategories").html(`<option value=""> Select Parent Category </option> `)
                //                 response.data.forEach(element => {
                //                     $("#parentCategories").append(`
                //                       <option value=${element._id}> ${element.name}
                //                        </option>`)
                //                 });

                //             }
                //         },
                //         error: function (xhr, status, error) {
                //             console.log(error)
                //         }
                //     })
                // }
                // getCategory();
                //Categories Form Validation ðŸ’£
                $("#updateCategoriesForm").validate({
                    rules: {
                        name: {
                            required: true
                        },
                        status: {
                            required: true
                        },
                    },

                })
                //Categories Form Submitimg ðŸ’£
                $("#updateCategoriesForm").on("submit", function (event) {
                    event.preventDefault();
                    const formdata = $(this).serializeArray();

                    var description = quill.getText().trim();
                    //Description Validation
                    if (description == "") {
                        $("#descrptionError").text('Desciption is required').css("color", "red")
                        return false;
                    } else {
                        var descObject = { name: "description", value: description };
                        formdata.push(descObject)
                        $("#descrptionError").text("");
                    }

                    //Categories Image validation
                    // if (formdata[2].value === "" && formdata[3].value == "") {
                    //     $("#imageError").text('Categories Image is required').css("color", "red")
                    //     return false;
                    // }
                    if ($(this).valid()) {
                        console.log(formdata)
                        $.ajax({
                            url: "/categoryhandle/update-category",
                            type: "PUT",
                            data: formdata,
                            headers: {
                                Authorization: `Bearer ${AuthToken}`
                            },
                            success: function (response) {
                                if (response.success) {
                                    iziToast.success({
                                        title: "Success",
                                        message: response.message,
                                        position: "topRight", // Position of the toast
                                        timeout: 3000, // Duration in milliseconds
                                    });
                                    window.location.href = "/categoryhandle/manage-category"
                                }
                            },
                            error: function (xhr, status, error) {
                                if (xhr.responseJSON && xhr.responseJSON.message) {
                                    iziToast.error({
                                        title: "Error",
                                        message: xhr.responseJSON.message,
                                        position: "topRight", // Position of the toast
                                        timeout: 3000, // Duration in milliseconds
                                    });
                                } else {
                                    iziToast.error({
                                        title: "Error",
                                        message: "Internal Server Error",
                                        position: "topRight", // Position of the toast
                                        timeout: 3000, // Duration in milliseconds
                                    });
                                }
                            },
                        })
                    }
                })
            })
        </script>

        <!--Categories Image Uploading Start-->
        <script>
            // $("#AddCatBtn").prop("disabled", true)
            var flag = 0
            const Token = localStorage.getItem("token");
            const AuthToken = Token.slice(1, -1);
            Dropzone.autoDiscover = false; // Prevent Dropzone from auto-initializing
            const myDropzone = new Dropzone("#myDropzone", {
                url: "/adminhandle/profile-upload",
                maxFiles: 1, // URL where files will be uploaded
                method: "post",
                maxFilesize: 2, // Maximum file size in MB
                acceptedFiles: "image/*", // Only allow image files
                addRemoveLinks: true, // Add remove links to each file preview
                paramName: "file", // Change the parameter name for the file
                headers: {
                    Authorization: `Bearer ${AuthToken}`, // Authorization header
                },
                success: function (file, response) {
                    document.getElementById("public_id").value = response.data.public_id;
                    document.getElementById("url").value = response.data.url;
                    $("#imageError").text("");
                    // $("#AddCatBtn").prop("disabled", false)

                },
                error: function (file, response) {
                    flag = 1;
                    $("#imageError").text('Categories Image Size is big').css("color", "red")
                    this.removeFile(this.files[0]);

                },
                init: function () {
                    this.on("addedfile", function (file) {
                        if (this.files.length > 1) {
                            this.removeFile(this.files[0]);
                        }
                    });
                    // Bind the removedfile event
                    this.on("removedfile", function (file) {
                        if (flag !== 1) {
                            handleFileRemoval();
                        }
                    });
                },

            });

            function handleFileRemoval() {
                $("#imageError").text('Categories Image is required').css("color", "red")

                const public_id = document.getElementById("public_id").value;
                $.ajax({
                    url: "/adminhandle/delete-temp-profile",
                    type: "POST",
                    headers: {
                        Authorization: `Bearer ${AuthToken}`, // Authorization header
                    },
                    data: {
                        public_id: public_id,
                    },
                    success: function (response) {
                        if (response.success) {
                            iziToast.success({
                                title: "Success",
                                message: response.message,
                                position: "topRight", // Position of the toast
                                timeout: 3000, // Duration in milliseconds
                            });
                        }
                    },
                    error: function (xhr, status, error) {
                        if (xhr.responseJSON && xhr.responseJSON.message) {
                            iziToast.error({
                                title: "Error",
                                message: xhr.responseJSON.message,
                                position: "topRight", // Position of the toast
                                timeout: 3000, // Duration in milliseconds
                            });
                        } else {
                            iziToast.error({
                                title: "Error",
                                message: "Internal Server Error",
                                position: "topRight", // Position of the toast
                                timeout: 3000, // Duration in milliseconds
                            });
                        }
                    },
                });
            }
        </script>
        <!--Profile Uploading End -->
        <!-- <script>
            $(document).ready(function () {
                // Define custom password validation method
                $.validator.addMethod(
                    "complexPassword",
                    function (value, element) {
                        return (
                            this.optional(element) ||
                            (/[A-Z]/.test(value) &&
                                /\d/.test(value) &&
                                /[!@#$%^&*(),.?":{}|<>]/.test(value))
                        );
                    },
                    "Password must contain at least one uppercase letter, one digit, and one special character."
                );
                $("#AddAdminForm").validate({
                    rules: {
                        firstname: {
                            required: true,
                        },
                        lastname: {
                            required: true,
                        },
                        email: {
                            required: true,
                            email: true,
                        },
                        password: {
                            required: true,
                            complexPassword: true,
                        },
                    },
                });
                $("#AddAdminForm").on("submit", function (event) {
                    event.preventDefault();
                    const formData = $(this).serializeArray();

                    $.ajax({
                        url: "/api/v1/auth/signup",
                        type: "POST",
                        data: formData,
                        success: function (response) {
                            if (response.success) {
                                iziToast.success({
                                    title: "Success",
                                    message: response.message,
                                    position: "topRight", // Position of the toast
                                    timeout: 3000, // Duration in milliseconds
                                });
                            }

                        },
                        error: function (xhr, status, error) {
                            if (xhr.responseJSON && xhr.responseJSON.message) {
                                iziToast.error({
                                    title: "Error",
                                    message: xhr.responseJSON.message,
                                    position: "topRight", // Position of the toast
                                    timeout: 3000, // Duration in milliseconds
                                });
                            } else {
                                iziToast.error({
                                    title: "Error",
                                    message: "Internal Server Error",
                                    position: "topRight", // Position of the toast
                                    timeout: 3000, // Duration in milliseconds
                                });
                            }
                        },
                    });
                });
            });
        </script> -->

        <%- include('../layout/end.ejs') %>